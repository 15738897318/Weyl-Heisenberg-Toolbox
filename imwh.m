%% Weyl-Heisenberg Bases Toolbox
% Script "imwh.m"
%% Описание:
% Реализует сжатие монохромного изображения с использованием оптимального
% базиса Вейля-Гейзенберга и проводит оценку идентичности исходного и 
% восстановленного изображений. А также определяет степень сжатия 
% монохромного изображения.
%
%% Ввод данных:
M = 8;  % Количество сдвигов по частоте 
L = 32; % Количество сдвигов по времени
a = phaseparam(M, L); % Параметр альфа
sigma = 0.0025; % Среднеквадратическое отклонение
t = 0; % Пороговое значение

% Формирование матрицы изображения:
RGB = imread('Images/lena256.png');
I = double(rgb2gray(RGB)); % полутоновое изображение
figure(1);
imshow(uint8(I));
title('Исходное изображение');
N = size(I, 1); % определение размеров изображения

% Построение матрицы оптимального базиса Вейля-Гейзенберга:
W = weylhzp(M, L, a, sigma);

% Прямое преобразование Вейля-Гейзенберга:
A = real(W' * I * W);
% Сжатие изображения по пороговому значению:
[A, total] = compress(A, t);
figure(2);
imshow(uint8(A));
title('Прямое преобразование Вейля-Гейзенберга');

% Обратное преобразование Вейля-Гейзенберга:
B = W * A * W';
% Приведение сигнала к вещественной нормальной форме:
% Делим на 2 для выполнения свойства унитарности. Подробнее смотрите
% скрипт "unitar.m".
B = real(B./2);
% Вычисление нормы разности матриц исходного изображения и
% восстановленного:
E = norm(I - B);
figure(3);
imshow(uint8(B));
title('Обратное преобразование Вейля-Гейзенберга');

% Вывод характеристик преобразования:
disp('Норма разности матриц исходного изображения и восстановленного:')
disp(E)
disp('Количество сжатых элементов:')
disp(total)
disp('Отношение количества сжатых элементов к общему числу элементов изображения:')
disp(total / (4 * N * N))