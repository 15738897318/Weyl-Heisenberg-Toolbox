%% Weyl-Heisenberg Bases Toolbox
% Function "dzakt.m"
%% Описание:
% Функция, реализующая быстрый алгоритм ортогонализации формирующей 
% функции с использованием дискретных Zak-преобразований  
% (по методу H. Bolcskei).
%
%% Входные данные:
% g - вектор дискретных отсчетов аппроксимированного усеченного гауссиана.
% M - количество сдвигов по частоте (четное число).
%
%% Выходные данные:
% gopt - вектор дискретных отсчетов оптимальной WH-функции.
function [ gopt ] = dzakt( g, M )
N  = length(g); % количество отсчетов вектора.
L  = N / M;     % определения количества сдвигов по времени.
L2 = L * 2;     % удвоенное количество сдвигов по времени.
M2 = M / 2;     % половина количества сдвигов по частоте.
G  = zeros(M2,L2);
Zo = zeros(M2,L2);
gopt = zeros( 1,N);

%% 1. Прямое Zak-преобразование:
% Формирование матрицы сдвигов:
for i=0:1:M2-1
    for j=0:1:L2-1
        G(i+1,j+1) = g(mod(i+fix(M/2)*j,N)+1);
    end
end
G = G.';

% Прямое преобразование Фурье (медленный и быстрый алгоритмы):
F = dftmtx(L2); % матрица Фурье размерности (2L, 2L).
Z = (F * G); % дискретное преобразование Фурье.
%Z = fft(G); % быстрое преобразование Фурье.
Z = Z.';

%% 2. Построение ортогональной матрицы:
for n=1:M2
    for k=1:L2
        if (k<L+1)
            Zo(n,k)=2.*Z(n,k)./sqrt(M.*(abs(Z(n,k)).^2+abs(Z(n,L2+k-L)).^2));  
        else
            Zo(n,k)=2.*Z(n,k)./sqrt(M.*(abs(Z(n,k)).^2+abs(Z(n,   k-L)).^2));  
        end
    end
end

%% 3. Обратное Zak-преобразование:
% Обратное преобразование Фурье (медленный и быстрый алгоритмы):
Zo = Zo.';
Go = (F' * Zo)./L2; % дискретное преобразование Фурье.
%Go = ifft(Zo); % быстрое преобразование Фурье.
Go = Go.';

%% 4. Получение оптимальной формирующей функции:
i=1;
for k=1:L2
    for n=1:M2
        gopt(1,i)=Go(n,k);
        i=i+1;
    end
end
end