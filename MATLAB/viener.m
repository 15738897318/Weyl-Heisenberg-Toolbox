%% Weyl-Heisenberg Bases Toolbox
% Function "viener.m"
%% Описание:
% Функция, реализующая быстрый алгоритм ортогонализации формирующей 
% функции с использованием дискретных преобразований Винера 
% (по методу Д.А. Петрова).
%% Входные данные:
% g - вектор дискретных отсчетов аппроксимированного усеченного гауссиана.
% M - количество сдвигов по частоте (четное число).
%
%% Выходные данные:
% go - вектор дискретных отсчетов оптимальной WH-функции.
function [ go ] = viener( g, M )
N  = length(g); % количество отсчетов вектора.
L  = N / M;     % определения количества сдвигов по времени.
L2 = L * 2;     % удвоенное количество сдвигов по времени.
G  = zeros(L2,N);
Z  = zeros(L2,N);
dZ = zeros(L2,N);
Zo = zeros(L2,N);
go = zeros( 1,N);

%% 1. Прямое преобразование Винера:
% Формирование матрицы сдвигов:
for i = 0:1:L2-1
    for j = 0:1:N-1
        G(i+1,j+1) = g(mod(j+fix(M/2)*i,N)+1);
    end;
end;
% Прямое преобразование Фурье (медленный и быстрый алгоритмы):
F = dftmtx(L2); % матрица Фурье размерности (2L, 2L).
Z = F * G; % дискретное преобразование Фурье.
%Z = fft(G); % быстрое преобразование Фурье.

%% 2. Фомрирование ортогонального базиса Винера:
dZ(  1:L ,:) = Z(L+1:L2,:);
dZ(L+1:L2,:) = Z(  1:L ,:);
Zo = 2.*Z./sqrt(M.*abs(Z).^2 + M.*abs(dZ).^2);

%% 3. Обратное преобразование Винера:
go(:) = sum(Zo)./(L2);