%% Weyl-Heisenberg Bases Toolbox
% Function "gschmidt.m"
%% Описание:
% Функция ортогонализации квадратной матрицы по Граму-Шмидту.
%
%% Входные данные:
% A - квадратная матрица.
%
%% Выходные данные:
% Q - ортогонализированный базис.
function [ Q ] = gschmidt( A )
% Число векторов.
n = size( A, 2 );
 
% Инициализируем выходную квадратную матрицу.
Q = zeros( n );

% Преобразуем каждый вектор в базисный:
% (1) j-ый базисный вектор будет ортогонален каждому из предыдущих 1...j-1 векторов;
% (2) будет единичной длины.
for j = 1 : n
    % Выбираем j-ый вектор:
    u = A( :, j );
    % Создаем экземпляр вектора:
    v1 = u;
    
    % Специальный случай для j = 1: просто нормируем этот вектор и помещаем
    % первым в найденный базис, так как нет векторов, относительно которых
    % нужно было бы делать его ортогональным.

    % Удаляем из оригинального вектора "u" все компоненты натянутые на базис
    % из векторов 1...j - 1, их вклад будет удален.
    % => j-ый вектор ортогонален остальным.
    % Предыдущие базисные вектора были найдены на предыдуших шагах.
    % => соблюдаем принцип ортогональности, но не ортонормированности.
    
    for i = 1 : j - 1
        v2 = Q(:,i);
        u = u - proj( v2, v1 );
    end
     
    % Нормируем вектор и кладем его в соответствующий столбец матрицы Q:
    Q(:,j) = u ./ norm( u );
end
end